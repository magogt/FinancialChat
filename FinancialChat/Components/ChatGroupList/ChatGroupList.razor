@using FinancialChat.Components.ChatGroupItem
@using FinancialChat.Core.Entities
@using FinancialChat.Core.Repositories
@inject IChatRoomRepository RoomsRepository 

<div id="plist" class="people-list">
    <div class="input-group">
        <input @bind-value="NewRoomName" type="text" class="form-control" placeholder="Add room...">
        <span @onclick="AddRoom" class="input-group-text"><i class="fa fa-plus"></i></span>
    </div>
    <ul class="list-unstyled chat-list mt-2 mb-0">
        @if (Rooms != null)
        {
            foreach (var r in Rooms)
            {
              <li>
                <ChatGroupItem Group="r" OnChatRoomDeleted="ChatRoomDeleted" />
              </li>
            }
        }
    </ul>
</div>

@code {
    [Parameter]
    public IEnumerable<ChatRoom> Rooms { get; set; }
    [Parameter]
    public EventCallback OnChatRoomListChanged { get; set; }

    public string NewRoomName { get; set; }

    public async void ChatRoomDeleted()
    {
        await OnChatRoomListChanged.InvokeAsync();
    }

    public async void AddRoom()
    {
        var room = await RoomsRepository.Insert(new ChatRoom { Name = NewRoomName });
        NewRoomName = "";
       // await InvokeAsync(StateHasChanged);
    }
}
