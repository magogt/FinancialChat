@using FinancialChat.Components.ChatMessageItem
@using FinancialChat.Core.Entities
@using FinancialChat.Core.Repositories
@using FinancialChat.State
@inject AppState AppState
@inject IChatMessageRepository MessagesRepository

<ul class="m-b-0">
    @if (Messages != null)
    {
        foreach (var m in Messages)
        {
            <ChatMessageItem Message="m" />
        }
    }
</ul>


@code {
    private IEnumerable<ChatMessage>? Messages;

    protected override void OnInitialized()
    {
        LoadHistory();
        AppState.OnChangeActiveRoom += LoadHistory;
    }

    private async void LoadHistory()
    {
        if (AppState?.ActiveRoom != null)
        {
            var roomId = AppState.ActiveRoom.Id;
            Messages = await MessagesRepository.GetByRoom(roomId);
            await InvokeAsync(StateHasChanged);
        }

    }

    public void Dispose()
    {
        AppState.OnChangeActiveRoom -= LoadHistory;
    }
}
